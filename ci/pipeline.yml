groups:
- jobs:
  - build-consul
  - release-consul
  - build-haproxy
  - release-haproxy
  - build-hashi-ui
  - release-hashi-ui
  - build-mysql
  - release-mysql
  - build-postgresql
  - release-postgresql
  - build-rabbitmq
  - release-rabbitmq
  - build-redis
  - release-redis
  - build-shield-agent
  - release-shield-agent
  - build-shield-proxy
  - release-shield-proxy
  - build-shield
  - release-shield
  - build-varnish
  - release-varnish
  - build-wal-e
  - release-wal-e
  - build-wordpress-proxy
  - release-wordpress-proxy
  - build-wordpress
  - release-wordpress
  - test-consul
  - test-postgresql
  - test-rabbitmq
  - test-redis
  - test-shield
  - test-varnish
  - test-wordpress
  name: all-packages
- jobs:
  - build-habitat-plans-pipeline-image
  name: images
- jobs:
  - docker-machine-setup
  name: docker-machine-setup
- jobs:
  - build-consul
  - release-consul
  - test-consul
  name: consul
- jobs:
  - build-haproxy
  - release-haproxy
  name: haproxy
- jobs:
  - build-hashi-ui
  - release-hashi-ui
  name: hashi
- jobs:
  - build-mysql
  - release-mysql
  name: mysql
- jobs:
  - build-postgresql
  - release-postgresql
  - test-postgresql
  name: postgresql
- jobs:
  - build-rabbitmq
  - release-rabbitmq
  - test-rabbitmq
  name: rabbitmq
- jobs:
  - build-redis
  - release-redis
  - test-redis
  name: redis
- jobs:
  - build-shield-agent
  - release-shield-agent
  - build-shield-proxy
  - release-shield-proxy
  - build-shield
  - release-shield
  - test-shield
  name: shield
- jobs:
  - build-varnish
  - release-varnish
  - test-varnish
  name: varnish
- jobs:
  - build-wal-e
  - release-wal-e
  name: wal
- jobs:
  - build-wordpress-proxy
  - release-wordpress-proxy
  - build-wordpress
  - release-wordpress
  - test-wordpress
  name: wordpress
jobs:
- name: build-habitat-plans-pipeline-image
  plan:
  - aggregate:
    - get: habitat-plans-pipeline
      trigger: true
    - get: habitat-release
      trigger: true
  - params:
      build: habitat-plans-pipeline/ci/image
      tag: habitat-release/version
      tag_as_latest: true
    put: habitat-plans-pipeline-image
  public: true
- name: docker-machine-setup
  plan:
  - config:
      image_resource:
        source:
          repository: bodymindarts/docker-machine-setup
        type: docker-image
      params:
        AWS_ACCESS_KEY_ID: REDACTED
        AWS_BUCKET: docker-machine-exports
        AWS_DEFAULT_REGION: eu-central-1
        AWS_SECRET_ACCESS_KEY: REDACTED
        DIGITALOCEAN_ACCESS_TOKEN: REDACTED
        DIGITALOCEAN_REGION: fra1
        MACHINE_NAME: habitat-plans-pipeline-machine
      platform: linux
      run:
        path: /setup-digitalocean
    task: docker-machine-setup
  serial: true
- name: build-haproxy
  plan:
  - aggregate:
    - get: core-openssl-pkg
      trigger: true
    - get: core-pcre-pkg
      trigger: true
    - get: core-zlib-pkg
      trigger: true
    - get: haproxy-plan
      trigger: true
    - get: habitat-plans-ci
  - config:
      image_resource:
        source:
          repository: starkandwayne/habitat-plans-pipeline
        type: docker-image
      inputs:
      - name: haproxy-plan
      - name: habitat-plans-ci
      outputs:
      - name: result
      params:
        HAB_ORIGIN: starkandwayne
        HAB_ORIGIN_KEY: REDACTED
        OUT: result
        PACKAGE_CONTEXT: haproxy-plan/haproxy
        PLAN_NAME: haproxy
      platform: linux
      run:
        path: ./habitat-plans-ci/ci/scripts/build-service
    privileged: true
    task: build-haproxy
  - aggregate:
    - params:
        load_file: result/starkandwayne-haproxy-docker.tar
        load_repository: starkandwayne/haproxy
        load_tag: habitat
        tag: result/docker_tag
      put: starkandwayne-haproxy-image
    - params:
        load_file: result/starkandwayne-haproxy-docker.tar
        load_repository: starkandwayne/haproxy
        load_tag: habitat
      put: starkandwayne-haproxy-edge-image
    - params:
        file: result/*.hart
      put: starkandwayne-haproxy-artifact
  public: true
- name: build-hashi-ui
  plan:
  - aggregate:
    - get: core-glibc-pkg
      trigger: true
    - get: hashi-ui-plan
      trigger: true
    - get: habitat-plans-ci
  - config:
      image_resource:
        source:
          repository: starkandwayne/habitat-plans-pipeline
        type: docker-image
      inputs:
      - name: hashi-ui-plan
      - name: habitat-plans-ci
      outputs:
      - name: result
      params:
        HAB_ORIGIN: starkandwayne
        HAB_ORIGIN_KEY: REDACTED
        OUT: result
        PACKAGE_CONTEXT: hashi-ui-plan/hashi-ui
        PLAN_NAME: hashi-ui
      platform: linux
      run:
        path: ./habitat-plans-ci/ci/scripts/build-service
    privileged: true
    task: build-hashi-ui
  - aggregate:
    - params:
        load_file: result/starkandwayne-hashi-ui-docker.tar
        load_repository: starkandwayne/hashi-ui
        load_tag: habitat
        tag: result/docker_tag
      put: starkandwayne-hashi-ui-image
    - params:
        load_file: result/starkandwayne-hashi-ui-docker.tar
        load_repository: starkandwayne/hashi-ui
        load_tag: habitat
      put: starkandwayne-hashi-ui-edge-image
    - params:
        file: result/*.hart
      put: starkandwayne-hashi-ui-artifact
  public: true
- name: build-mysql
  plan:
  - aggregate:
    - get: core-bash-pkg
      trigger: true
    - get: core-coreutils-pkg
      trigger: true
    - get: core-gawk-pkg
      trigger: true
    - get: core-gcc-libs-pkg
      trigger: true
    - get: core-glibc-pkg
      trigger: true
    - get: core-grep-pkg
      trigger: true
    - get: core-inetutils-pkg
      trigger: true
    - get: core-ncurses-pkg
      trigger: true
    - get: core-openssl-pkg
      trigger: true
    - get: core-pcre-pkg
      trigger: true
    - get: core-perl-pkg
      trigger: true
    - get: core-procps-ng-pkg
      trigger: true
    - get: core-sed-pkg
      trigger: true
    - get: mysql-plan
      trigger: true
    - get: habitat-plans-ci
  - config:
      image_resource:
        source:
          repository: starkandwayne/habitat-plans-pipeline
        type: docker-image
      inputs:
      - name: mysql-plan
      - name: habitat-plans-ci
      outputs:
      - name: result
      params:
        HAB_ORIGIN: starkandwayne
        HAB_ORIGIN_KEY: REDACTED
        OUT: result
        PACKAGE_CONTEXT: mysql-plan/mysql
        PLAN_NAME: mysql
      platform: linux
      run:
        path: ./habitat-plans-ci/ci/scripts/build-service
    privileged: true
    task: build-mysql
  - aggregate:
    - params:
        load_file: result/starkandwayne-mysql-docker.tar
        load_repository: starkandwayne/mysql
        load_tag: habitat
        tag: result/docker_tag
      put: starkandwayne-mysql-image
    - params:
        load_file: result/starkandwayne-mysql-docker.tar
        load_repository: starkandwayne/mysql
        load_tag: habitat
      put: starkandwayne-mysql-edge-image
    - params:
        file: result/*.hart
      put: starkandwayne-mysql-artifact
  public: true
- name: build-postgresql
  plan:
  - aggregate:
    - get: core-bash-pkg
      trigger: true
    - get: core-envdir-pkg
      trigger: true
    - get: core-postgresql-9.6.1-pkg
      trigger: true
    - get: starkandwayne-wal-e-pkg
      trigger: true
    - get: postgresql-plan
      trigger: true
    - get: habitat-plans-ci
  - config:
      image_resource:
        source:
          repository: starkandwayne/habitat-plans-pipeline
        type: docker-image
      inputs:
      - name: postgresql-plan
      - name: habitat-plans-ci
      outputs:
      - name: result
      params:
        HAB_ORIGIN: starkandwayne
        HAB_ORIGIN_KEY: REDACTED
        OUT: result
        PACKAGE_CONTEXT: postgresql-plan/postgresql
        PLAN_NAME: postgresql
      platform: linux
      run:
        path: ./habitat-plans-ci/ci/scripts/build-service
    privileged: true
    task: build-postgresql
  - aggregate:
    - params:
        load_file: result/starkandwayne-postgresql-docker.tar
        load_repository: starkandwayne/postgresql
        load_tag: habitat
        tag: result/docker_tag
      put: starkandwayne-postgresql-image
    - params:
        load_file: result/starkandwayne-postgresql-docker.tar
        load_repository: starkandwayne/postgresql
        load_tag: habitat
      put: starkandwayne-postgresql-edge-image
    - params:
        file: result/*.hart
      put: starkandwayne-postgresql-artifact
  public: true
- name: build-rabbitmq
  plan:
  - aggregate:
    - get: core-coreutils-pkg
      trigger: true
    - get: core-erlang-pkg
      trigger: true
    - get: core-glibc-pkg
      trigger: true
    - get: rabbitmq-plan
      trigger: true
    - get: habitat-plans-ci
  - config:
      image_resource:
        source:
          repository: starkandwayne/habitat-plans-pipeline
        type: docker-image
      inputs:
      - name: rabbitmq-plan
      - name: habitat-plans-ci
      outputs:
      - name: result
      params:
        HAB_ORIGIN: starkandwayne
        HAB_ORIGIN_KEY: REDACTED
        OUT: result
        PACKAGE_CONTEXT: rabbitmq-plan/rabbitmq
        PLAN_NAME: rabbitmq
      platform: linux
      run:
        path: ./habitat-plans-ci/ci/scripts/build-service
    privileged: true
    task: build-rabbitmq
  - aggregate:
    - params:
        load_file: result/starkandwayne-rabbitmq-docker.tar
        load_repository: starkandwayne/rabbitmq
        load_tag: habitat
        tag: result/docker_tag
      put: starkandwayne-rabbitmq-image
    - params:
        load_file: result/starkandwayne-rabbitmq-docker.tar
        load_repository: starkandwayne/rabbitmq
        load_tag: habitat
      put: starkandwayne-rabbitmq-edge-image
    - params:
        file: result/*.hart
      put: starkandwayne-rabbitmq-artifact
  public: true
- name: build-redis
  plan:
  - aggregate:
    - get: core-glibc-pkg
      trigger: true
    - get: core-jq-static-pkg
      trigger: true
    - get: starkandwayne-shield-agent-pkg
      trigger: true
    - get: redis-plan
      trigger: true
    - get: habitat-plans-ci
  - config:
      image_resource:
        source:
          repository: starkandwayne/habitat-plans-pipeline
        type: docker-image
      inputs:
      - name: redis-plan
      - name: habitat-plans-ci
      outputs:
      - name: result
      params:
        HAB_ORIGIN: starkandwayne
        HAB_ORIGIN_KEY: REDACTED
        OUT: result
        PACKAGE_CONTEXT: redis-plan/redis
        PLAN_NAME: redis
      platform: linux
      run:
        path: ./habitat-plans-ci/ci/scripts/build-service
    privileged: true
    task: build-redis
  - aggregate:
    - params:
        load_file: result/starkandwayne-redis-docker.tar
        load_repository: starkandwayne/redis
        load_tag: habitat
        tag: result/docker_tag
      put: starkandwayne-redis-image
    - params:
        load_file: result/starkandwayne-redis-docker.tar
        load_repository: starkandwayne/redis
        load_tag: habitat
      put: starkandwayne-redis-edge-image
    - params:
        file: result/*.hart
      put: starkandwayne-redis-artifact
  public: true
- name: build-shield-agent
  plan:
  - aggregate:
    - get: core-bash-pkg
      trigger: true
    - get: core-bzip2-pkg
      trigger: true
    - get: core-cacerts-pkg
      trigger: true
    - get: core-coreutils-pkg
      trigger: true
    - get: core-curl-pkg
      trigger: true
    - get: core-glibc-pkg
      trigger: true
    - get: core-jq-static-pkg
      trigger: true
    - get: core-libarchive-pkg
      trigger: true
    - get: shield-agent-plan
      trigger: true
    - get: habitat-plans-ci
  - config:
      image_resource:
        source:
          repository: starkandwayne/habitat-plans-pipeline
        type: docker-image
      inputs:
      - name: shield-agent-plan
      - name: habitat-plans-ci
      outputs:
      - name: result
      params:
        HAB_ORIGIN: starkandwayne
        HAB_ORIGIN_KEY: REDACTED
        OUT: result
        PACKAGE_CONTEXT: shield-agent-plan/shield-agent
        PLAN_NAME: shield-agent
      platform: linux
      run:
        path: ./habitat-plans-ci/ci/scripts/build-service
    privileged: true
    task: build-shield-agent
  - aggregate:
    - params:
        load_file: result/starkandwayne-shield-agent-docker.tar
        load_repository: starkandwayne/shield-agent
        load_tag: habitat
        tag: result/docker_tag
      put: starkandwayne-shield-agent-image
    - params:
        load_file: result/starkandwayne-shield-agent-docker.tar
        load_repository: starkandwayne/shield-agent
        load_tag: habitat
      put: starkandwayne-shield-agent-edge-image
    - params:
        file: result/*.hart
      put: starkandwayne-shield-agent-artifact
  public: true
- name: build-shield
  plan:
  - aggregate:
    - get: core-bash-pkg
      trigger: true
    - get: core-glibc-pkg
      trigger: true
    - get: starkandwayne-postgresql-pkg
      trigger: true
    - get: starkandwayne-shield-proxy-0.10.8-pkg
      trigger: true
    - get: shield-plan
      trigger: true
    - get: habitat-plans-ci
  - config:
      image_resource:
        source:
          repository: starkandwayne/habitat-plans-pipeline
        type: docker-image
      inputs:
      - name: shield-plan
      - name: habitat-plans-ci
      outputs:
      - name: result
      params:
        HAB_ORIGIN: starkandwayne
        HAB_ORIGIN_KEY: REDACTED
        OUT: result
        PACKAGE_CONTEXT: shield-plan/shield
        PLAN_NAME: shield
      platform: linux
      run:
        path: ./habitat-plans-ci/ci/scripts/build-service
    privileged: true
    task: build-shield
  - aggregate:
    - params:
        load_file: result/starkandwayne-shield-docker.tar
        load_repository: starkandwayne/shield
        load_tag: habitat
        tag: result/docker_tag
      put: starkandwayne-shield-image
    - params:
        load_file: result/starkandwayne-shield-docker.tar
        load_repository: starkandwayne/shield
        load_tag: habitat
      put: starkandwayne-shield-edge-image
    - params:
        file: result/*.hart
      put: starkandwayne-shield-artifact
  public: true
- name: build-shield-proxy
  plan:
  - aggregate:
    - get: core-bash-pkg
      trigger: true
    - get: core-nginx-pkg
      trigger: true
    - get: core-openssl-pkg
      trigger: true
    - get: shield-proxy-plan
      trigger: true
    - get: habitat-plans-ci
  - config:
      image_resource:
        source:
          repository: starkandwayne/habitat-plans-pipeline
        type: docker-image
      inputs:
      - name: shield-proxy-plan
      - name: habitat-plans-ci
      outputs:
      - name: result
      params:
        HAB_ORIGIN: starkandwayne
        HAB_ORIGIN_KEY: REDACTED
        OUT: result
        PACKAGE_CONTEXT: shield-proxy-plan/shield-proxy
        PLAN_NAME: shield-proxy
      platform: linux
      run:
        path: ./habitat-plans-ci/ci/scripts/build-service
    privileged: true
    task: build-shield-proxy
  - aggregate:
    - params:
        load_file: result/starkandwayne-shield-proxy-docker.tar
        load_repository: starkandwayne/shield-proxy
        load_tag: habitat
        tag: result/docker_tag
      put: starkandwayne-shield-proxy-image
    - params:
        load_file: result/starkandwayne-shield-proxy-docker.tar
        load_repository: starkandwayne/shield-proxy
        load_tag: habitat
      put: starkandwayne-shield-proxy-edge-image
    - params:
        file: result/*.hart
      put: starkandwayne-shield-proxy-artifact
  public: true
- name: build-varnish
  plan:
  - aggregate:
    - get: core-bash-pkg
      trigger: true
    - get: core-docutils-pkg
      trigger: true
    - get: core-gcc-pkg
      trigger: true
    - get: core-gcc-libs-pkg
      trigger: true
    - get: core-gettext-pkg
      trigger: true
    - get: core-glibc-pkg
      trigger: true
    - get: core-groff-pkg
      trigger: true
    - get: core-libbsd-pkg
      trigger: true
    - get: core-libedit-pkg
      trigger: true
    - get: core-libpipeline-pkg
      trigger: true
    - get: core-libunistring-pkg
      trigger: true
    - get: core-man-db-pkg
      trigger: true
    - get: core-ncurses-pkg
      trigger: true
    - get: core-pcre-pkg
      trigger: true
    - get: varnish-plan
      trigger: true
    - get: habitat-plans-ci
  - config:
      image_resource:
        source:
          repository: starkandwayne/habitat-plans-pipeline
        type: docker-image
      inputs:
      - name: varnish-plan
      - name: habitat-plans-ci
      outputs:
      - name: result
      params:
        HAB_ORIGIN: starkandwayne
        HAB_ORIGIN_KEY: REDACTED
        OUT: result
        PACKAGE_CONTEXT: varnish-plan/varnish
        PLAN_NAME: varnish
      platform: linux
      run:
        path: ./habitat-plans-ci/ci/scripts/build-service
    privileged: true
    task: build-varnish
  - aggregate:
    - params:
        load_file: result/starkandwayne-varnish-docker.tar
        load_repository: starkandwayne/varnish
        load_tag: habitat
        tag: result/docker_tag
      put: starkandwayne-varnish-image
    - params:
        load_file: result/starkandwayne-varnish-docker.tar
        load_repository: starkandwayne/varnish
        load_tag: habitat
      put: starkandwayne-varnish-edge-image
    - params:
        file: result/*.hart
      put: starkandwayne-varnish-artifact
  public: true
- name: build-wal-e
  plan:
  - aggregate:
    - get: core-envdir-pkg
      trigger: true
    - get: core-lzop-pkg
      trigger: true
    - get: core-postgresql-pkg
      trigger: true
    - get: core-pv-pkg
      trigger: true
    - get: core-python-3.5.2-pkg
      trigger: true
    - get: wal-e-plan
      trigger: true
    - get: habitat-plans-ci
  - config:
      image_resource:
        source:
          repository: starkandwayne/habitat-plans-pipeline
        type: docker-image
      inputs:
      - name: wal-e-plan
      - name: habitat-plans-ci
      outputs:
      - name: result
      params:
        HAB_ORIGIN: starkandwayne
        HAB_ORIGIN_KEY: REDACTED
        OUT: result
        PACKAGE_CONTEXT: wal-e-plan/wal-e
        PLAN_NAME: wal-e
      platform: linux
      run:
        path: ./habitat-plans-ci/ci/scripts/build-service
    privileged: true
    task: build-wal-e
  - aggregate:
    - params:
        load_file: result/starkandwayne-wal-e-docker.tar
        load_repository: starkandwayne/wal-e
        load_tag: habitat
        tag: result/docker_tag
      put: starkandwayne-wal-e-image
    - params:
        load_file: result/starkandwayne-wal-e-docker.tar
        load_repository: starkandwayne/wal-e
        load_tag: habitat
      put: starkandwayne-wal-e-edge-image
    - params:
        file: result/*.hart
      put: starkandwayne-wal-e-artifact
  public: true
- name: build-wordpress
  plan:
  - aggregate:
    - get: core-curl-pkg
      trigger: true
    - get: core-mysql-client-pkg
      trigger: true
    - get: core-php-pkg
      trigger: true
    - get: starkandwayne-wordpress-proxy-4.7.4-pkg
      trigger: true
    - get: wordpress-plan
      trigger: true
    - get: habitat-plans-ci
  - config:
      image_resource:
        source:
          repository: starkandwayne/habitat-plans-pipeline
        type: docker-image
      inputs:
      - name: wordpress-plan
      - name: habitat-plans-ci
      outputs:
      - name: result
      params:
        HAB_ORIGIN: starkandwayne
        HAB_ORIGIN_KEY: REDACTED
        OUT: result
        PACKAGE_CONTEXT: wordpress-plan/wordpress
        PLAN_NAME: wordpress
      platform: linux
      run:
        path: ./habitat-plans-ci/ci/scripts/build-service
    privileged: true
    task: build-wordpress
  - aggregate:
    - params:
        load_file: result/starkandwayne-wordpress-docker.tar
        load_repository: starkandwayne/wordpress
        load_tag: habitat
        tag: result/docker_tag
      put: starkandwayne-wordpress-image
    - params:
        load_file: result/starkandwayne-wordpress-docker.tar
        load_repository: starkandwayne/wordpress
        load_tag: habitat
      put: starkandwayne-wordpress-edge-image
    - params:
        file: result/*.hart
      put: starkandwayne-wordpress-artifact
  public: true
- name: build-wordpress-proxy
  plan:
  - aggregate:
    - get: core-nginx-pkg
      trigger: true
    - get: wordpress-proxy-plan
      trigger: true
    - get: habitat-plans-ci
  - config:
      image_resource:
        source:
          repository: starkandwayne/habitat-plans-pipeline
        type: docker-image
      inputs:
      - name: wordpress-proxy-plan
      - name: habitat-plans-ci
      outputs:
      - name: result
      params:
        HAB_ORIGIN: starkandwayne
        HAB_ORIGIN_KEY: REDACTED
        OUT: result
        PACKAGE_CONTEXT: wordpress-proxy-plan/wordpress-proxy
        PLAN_NAME: wordpress-proxy
      platform: linux
      run:
        path: ./habitat-plans-ci/ci/scripts/build-service
    privileged: true
    task: build-wordpress-proxy
  - aggregate:
    - params:
        load_file: result/starkandwayne-wordpress-proxy-docker.tar
        load_repository: starkandwayne/wordpress-proxy
        load_tag: habitat
        tag: result/docker_tag
      put: starkandwayne-wordpress-proxy-image
    - params:
        load_file: result/starkandwayne-wordpress-proxy-docker.tar
        load_repository: starkandwayne/wordpress-proxy
        load_tag: habitat
      put: starkandwayne-wordpress-proxy-edge-image
    - params:
        file: result/*.hart
      put: starkandwayne-wordpress-proxy-artifact
  public: true
- name: build-consul
  plan:
  - aggregate:
    - get: consul-plan
      trigger: true
    - get: habitat-plans-ci
  - config:
      image_resource:
        source:
          repository: starkandwayne/habitat-plans-pipeline
        type: docker-image
      inputs:
      - name: consul-plan
      - name: habitat-plans-ci
      outputs:
      - name: result
      params:
        HAB_ORIGIN: starkandwayne
        HAB_ORIGIN_KEY: REDACTED
        OUT: result
        PACKAGE_CONTEXT: consul-plan/consul
        PLAN_NAME: consul
      platform: linux
      run:
        path: ./habitat-plans-ci/ci/scripts/build-service
    privileged: true
    task: build-consul
  - aggregate:
    - params:
        load_file: result/starkandwayne-consul-docker.tar
        load_repository: starkandwayne/consul
        load_tag: habitat
        tag: result/docker_tag
      put: starkandwayne-consul-image
    - params:
        load_file: result/starkandwayne-consul-docker.tar
        load_repository: starkandwayne/consul
        load_tag: habitat
      put: starkandwayne-consul-edge-image
    - params:
        file: result/*.hart
      put: starkandwayne-consul-artifact
  public: true
- name: release-consul
  plan:
  - aggregate:
    - get: starkandwayne-consul-artifact
      passed:
      - test-consul
    - get: starkandwayne-consul-image
      params:
        save: true
      passed:
      - test-consul
  - aggregate:
    - params:
        load: starkandwayne-consul-image
        tag_as_latest: true
      put: starkandwayne-consul-image
    - params:
        result: starkandwayne-consul-artifact
      put: starkandwayne-consul-pkg
  public: true
- name: release-haproxy
  plan:
  - aggregate:
    - get: starkandwayne-haproxy-artifact
      passed:
      - build-haproxy
    - get: starkandwayne-haproxy-image
      params:
        save: true
      passed:
      - build-haproxy
  - aggregate:
    - params:
        load: starkandwayne-haproxy-image
        tag_as_latest: true
      put: starkandwayne-haproxy-image
    - params:
        result: starkandwayne-haproxy-artifact
      put: starkandwayne-haproxy-pkg
  public: true
- name: release-hashi-ui
  plan:
  - aggregate:
    - get: starkandwayne-hashi-ui-artifact
      passed:
      - build-hashi-ui
    - get: starkandwayne-hashi-ui-image
      params:
        save: true
      passed:
      - build-hashi-ui
  - aggregate:
    - params:
        load: starkandwayne-hashi-ui-image
        tag_as_latest: true
      put: starkandwayne-hashi-ui-image
    - params:
        result: starkandwayne-hashi-ui-artifact
      put: starkandwayne-hashi-ui-pkg
  public: true
- name: release-mysql
  plan:
  - aggregate:
    - get: starkandwayne-mysql-artifact
      passed:
      - build-mysql
    - get: starkandwayne-mysql-image
      params:
        save: true
      passed:
      - build-mysql
  - aggregate:
    - params:
        load: starkandwayne-mysql-image
        tag_as_latest: true
      put: starkandwayne-mysql-image
    - params:
        result: starkandwayne-mysql-artifact
      put: starkandwayne-mysql-pkg
  public: true
- name: release-postgresql
  plan:
  - aggregate:
    - get: starkandwayne-postgresql-artifact
      passed:
      - test-postgresql
    - get: starkandwayne-postgresql-image
      params:
        save: true
      passed:
      - test-postgresql
  - aggregate:
    - params:
        load: starkandwayne-postgresql-image
        tag_as_latest: true
      put: starkandwayne-postgresql-image
    - params:
        result: starkandwayne-postgresql-artifact
      put: starkandwayne-postgresql-pkg
  public: true
- name: release-rabbitmq
  plan:
  - aggregate:
    - get: starkandwayne-rabbitmq-artifact
      passed:
      - test-rabbitmq
    - get: starkandwayne-rabbitmq-image
      params:
        save: true
      passed:
      - test-rabbitmq
  - aggregate:
    - params:
        load: starkandwayne-rabbitmq-image
        tag_as_latest: true
      put: starkandwayne-rabbitmq-image
    - params:
        result: starkandwayne-rabbitmq-artifact
      put: starkandwayne-rabbitmq-pkg
  public: true
- name: release-redis
  plan:
  - aggregate:
    - get: starkandwayne-redis-artifact
      passed:
      - test-redis
    - get: starkandwayne-redis-image
      params:
        save: true
      passed:
      - test-redis
  - aggregate:
    - params:
        load: starkandwayne-redis-image
        tag_as_latest: true
      put: starkandwayne-redis-image
    - params:
        result: starkandwayne-redis-artifact
      put: starkandwayne-redis-pkg
  public: true
- name: release-shield-agent
  plan:
  - aggregate:
    - get: starkandwayne-shield-agent-artifact
      passed:
      - test-shield
    - get: starkandwayne-shield-agent-image
      params:
        save: true
      passed:
      - test-shield
  - aggregate:
    - params:
        load: starkandwayne-shield-agent-image
        tag_as_latest: true
      put: starkandwayne-shield-agent-image
    - params:
        result: starkandwayne-shield-agent-artifact
      put: starkandwayne-shield-agent-pkg
  public: true
- name: release-shield-proxy
  plan:
  - aggregate:
    - get: starkandwayne-shield-proxy-artifact
      passed:
      - build-shield-proxy
    - get: starkandwayne-shield-proxy-image
      params:
        save: true
      passed:
      - build-shield-proxy
  - aggregate:
    - params:
        load: starkandwayne-shield-proxy-image
        tag_as_latest: true
      put: starkandwayne-shield-proxy-image
    - params:
        result: starkandwayne-shield-proxy-artifact
      put: starkandwayne-shield-proxy-pkg
  public: true
- name: release-shield
  plan:
  - aggregate:
    - get: starkandwayne-shield-artifact
      passed:
      - test-shield
    - get: starkandwayne-shield-image
      params:
        save: true
      passed:
      - test-shield
  - aggregate:
    - params:
        load: starkandwayne-shield-image
        tag_as_latest: true
      put: starkandwayne-shield-image
    - params:
        result: starkandwayne-shield-artifact
      put: starkandwayne-shield-pkg
  public: true
- name: release-varnish
  plan:
  - aggregate:
    - get: starkandwayne-varnish-artifact
      passed:
      - test-varnish
    - get: starkandwayne-varnish-image
      params:
        save: true
      passed:
      - test-varnish
  - aggregate:
    - params:
        load: starkandwayne-varnish-image
        tag_as_latest: true
      put: starkandwayne-varnish-image
    - params:
        result: starkandwayne-varnish-artifact
      put: starkandwayne-varnish-pkg
  public: true
- name: release-wal-e
  plan:
  - aggregate:
    - get: starkandwayne-wal-e-artifact
      passed:
      - build-wal-e
    - get: starkandwayne-wal-e-image
      params:
        save: true
      passed:
      - build-wal-e
  - aggregate:
    - params:
        load: starkandwayne-wal-e-image
        tag_as_latest: true
      put: starkandwayne-wal-e-image
    - params:
        result: starkandwayne-wal-e-artifact
      put: starkandwayne-wal-e-pkg
  public: true
- name: release-wordpress-proxy
  plan:
  - aggregate:
    - get: starkandwayne-wordpress-proxy-artifact
      passed:
      - build-wordpress-proxy
    - get: starkandwayne-wordpress-proxy-image
      params:
        save: true
      passed:
      - build-wordpress-proxy
  - aggregate:
    - params:
        load: starkandwayne-wordpress-proxy-image
        tag_as_latest: true
      put: starkandwayne-wordpress-proxy-image
    - params:
        result: starkandwayne-wordpress-proxy-artifact
      put: starkandwayne-wordpress-proxy-pkg
  public: true
- name: release-wordpress
  plan:
  - aggregate:
    - get: starkandwayne-wordpress-artifact
      passed:
      - test-wordpress
    - get: starkandwayne-wordpress-image
      params:
        save: true
      passed:
      - test-wordpress
  - aggregate:
    - params:
        load: starkandwayne-wordpress-image
        tag_as_latest: true
      put: starkandwayne-wordpress-image
    - params:
        result: starkandwayne-wordpress-artifact
      put: starkandwayne-wordpress-pkg
  public: true
- name: test-consul
  plan:
  - aggregate:
    - get: starkandwayne-consul-edge-image
      params:
        skip_download: true
      passed:
      - build-consul
      trigger: true
    - get: consul-tests
      trigger: true
    - get: starkandwayne-consul-artifact
      passed:
      - build-consul
    - get: starkandwayne-consul-image
      params:
        skip_download: true
      passed:
      - build-consul
  - config:
      image_resource:
        source:
          repository: bodymindarts/delmo-concourse
        type: docker-image
      inputs:
      - name: consul-tests
      params:
        AWS_ACCESS_KEY: REDACTED
        AWS_BUCKET: shield-habitat-test
        AWS_REGION: eu-central-1
        AWS_SECRET_KEY: REDACTED
        MACHINE_EXPORT_AWS_ACCESS_KEY_ID: REDACTED
        MACHINE_EXPORT_AWS_BUCKET: docker-machine-exports
        MACHINE_EXPORT_AWS_REGION: eu-central-1
        MACHINE_EXPORT_AWS_SECRET_ACCESS_KEY: REDACTED
        MACHINE_NAME: habitat-plans-pipeline-machine
      platform: linux
      run:
        args:
        - delmo
        - --only-build-task
        - -f
        - consul-tests/consul/tests/delmo.yml
        - -m
        - habitat-plans-pipeline-machine
        path: /entrypoint.sh
    task: test-consul
  public: false
  serial: true
  serial_groups:
  - delmo
- name: test-postgresql
  plan:
  - aggregate:
    - get: starkandwayne-postgresql-edge-image
      params:
        skip_download: true
      passed:
      - build-postgresql
      trigger: true
    - get: postgresql-tests
      trigger: true
    - get: starkandwayne-postgresql-artifact
      passed:
      - build-postgresql
    - get: starkandwayne-postgresql-image
      params:
        skip_download: true
      passed:
      - build-postgresql
  - config:
      image_resource:
        source:
          repository: bodymindarts/delmo-concourse
        type: docker-image
      inputs:
      - name: postgresql-tests
      params:
        AWS_ACCESS_KEY: REDACTED
        AWS_BUCKET: shield-habitat-test
        AWS_REGION: eu-central-1
        AWS_SECRET_KEY: REDACTED
        MACHINE_EXPORT_AWS_ACCESS_KEY_ID: REDACTED
        MACHINE_EXPORT_AWS_BUCKET: docker-machine-exports
        MACHINE_EXPORT_AWS_REGION: eu-central-1
        MACHINE_EXPORT_AWS_SECRET_ACCESS_KEY: REDACTED
        MACHINE_NAME: habitat-plans-pipeline-machine
      platform: linux
      run:
        args:
        - delmo
        - --only-build-task
        - -f
        - postgresql-tests/postgresql/tests/delmo.yml
        - -m
        - habitat-plans-pipeline-machine
        path: /entrypoint.sh
    task: test-postgresql
  public: false
  serial: true
  serial_groups:
  - delmo
- name: test-rabbitmq
  plan:
  - aggregate:
    - get: starkandwayne-rabbitmq-edge-image
      params:
        skip_download: true
      passed:
      - build-rabbitmq
      trigger: true
    - get: rabbitmq-tests
      trigger: true
    - get: starkandwayne-rabbitmq-artifact
      passed:
      - build-rabbitmq
    - get: starkandwayne-rabbitmq-image
      params:
        skip_download: true
      passed:
      - build-rabbitmq
  - config:
      image_resource:
        source:
          repository: bodymindarts/delmo-concourse
        type: docker-image
      inputs:
      - name: rabbitmq-tests
      params:
        AWS_ACCESS_KEY: REDACTED
        AWS_BUCKET: shield-habitat-test
        AWS_REGION: eu-central-1
        AWS_SECRET_KEY: REDACTED
        MACHINE_EXPORT_AWS_ACCESS_KEY_ID: REDACTED
        MACHINE_EXPORT_AWS_BUCKET: docker-machine-exports
        MACHINE_EXPORT_AWS_REGION: eu-central-1
        MACHINE_EXPORT_AWS_SECRET_ACCESS_KEY: REDACTED
        MACHINE_NAME: habitat-plans-pipeline-machine
      platform: linux
      run:
        args:
        - delmo
        - --only-build-task
        - -f
        - rabbitmq-tests/rabbitmq/tests/delmo.yml
        - -m
        - habitat-plans-pipeline-machine
        path: /entrypoint.sh
    task: test-rabbitmq
  public: false
  serial: true
  serial_groups:
  - delmo
- name: test-redis
  plan:
  - aggregate:
    - get: starkandwayne-redis-edge-image
      params:
        skip_download: true
      passed:
      - build-redis
      trigger: true
    - get: redis-tests
      trigger: true
    - get: starkandwayne-redis-artifact
      passed:
      - build-redis
    - get: starkandwayne-redis-image
      params:
        skip_download: true
      passed:
      - build-redis
  - config:
      image_resource:
        source:
          repository: bodymindarts/delmo-concourse
        type: docker-image
      inputs:
      - name: redis-tests
      params:
        AWS_ACCESS_KEY: REDACTED
        AWS_BUCKET: shield-habitat-test
        AWS_REGION: eu-central-1
        AWS_SECRET_KEY: REDACTED
        MACHINE_EXPORT_AWS_ACCESS_KEY_ID: REDACTED
        MACHINE_EXPORT_AWS_BUCKET: docker-machine-exports
        MACHINE_EXPORT_AWS_REGION: eu-central-1
        MACHINE_EXPORT_AWS_SECRET_ACCESS_KEY: REDACTED
        MACHINE_NAME: habitat-plans-pipeline-machine
      platform: linux
      run:
        args:
        - delmo
        - --only-build-task
        - -f
        - redis-tests/redis/tests/delmo.yml
        - -m
        - habitat-plans-pipeline-machine
        path: /entrypoint.sh
    task: test-redis
  public: false
  serial: true
  serial_groups:
  - delmo
- name: test-shield
  plan:
  - aggregate:
    - get: starkandwayne-shield-edge-image
      params:
        skip_download: true
      passed:
      - build-shield
      trigger: true
    - get: shield-tests
      trigger: true
    - get: starkandwayne-shield-artifact
      passed:
      - build-shield
    - get: starkandwayne-shield-image
      params:
        skip_download: true
      passed:
      - build-shield
    - get: starkandwayne-shield-agent-edge-image
      params:
        skip_download: true
      passed:
      - build-shield-agent
      trigger: true
    - get: starkandwayne-shield-agent-artifact
      passed:
      - build-shield-agent
    - get: starkandwayne-shield-agent-image
      params:
        skip_download: true
      passed:
      - build-shield-agent
  - config:
      image_resource:
        source:
          repository: bodymindarts/delmo-concourse
        type: docker-image
      inputs:
      - name: shield-tests
      params:
        AWS_ACCESS_KEY: REDACTED
        AWS_BUCKET: shield-habitat-test
        AWS_REGION: eu-central-1
        AWS_SECRET_KEY: REDACTED
        MACHINE_EXPORT_AWS_ACCESS_KEY_ID: REDACTED
        MACHINE_EXPORT_AWS_BUCKET: docker-machine-exports
        MACHINE_EXPORT_AWS_REGION: eu-central-1
        MACHINE_EXPORT_AWS_SECRET_ACCESS_KEY: REDACTED
        MACHINE_NAME: habitat-plans-pipeline-machine
      platform: linux
      run:
        args:
        - delmo
        - --only-build-task
        - -f
        - shield-tests/shield/tests/delmo.yml
        - -m
        - habitat-plans-pipeline-machine
        path: /entrypoint.sh
    task: test-shield
  public: false
  serial: true
  serial_groups:
  - delmo
- name: test-varnish
  plan:
  - aggregate:
    - get: starkandwayne-varnish-edge-image
      params:
        skip_download: true
      passed:
      - build-varnish
      trigger: true
    - get: varnish-tests
      trigger: true
    - get: starkandwayne-varnish-artifact
      passed:
      - build-varnish
    - get: starkandwayne-varnish-image
      params:
        skip_download: true
      passed:
      - build-varnish
  - config:
      image_resource:
        source:
          repository: bodymindarts/delmo-concourse
        type: docker-image
      inputs:
      - name: varnish-tests
      params:
        AWS_ACCESS_KEY: REDACTED
        AWS_BUCKET: shield-habitat-test
        AWS_REGION: eu-central-1
        AWS_SECRET_KEY: REDACTED
        MACHINE_EXPORT_AWS_ACCESS_KEY_ID: REDACTED
        MACHINE_EXPORT_AWS_BUCKET: docker-machine-exports
        MACHINE_EXPORT_AWS_REGION: eu-central-1
        MACHINE_EXPORT_AWS_SECRET_ACCESS_KEY: REDACTED
        MACHINE_NAME: habitat-plans-pipeline-machine
      platform: linux
      run:
        args:
        - delmo
        - --only-build-task
        - -f
        - varnish-tests/varnish/tests/delmo.yml
        - -m
        - habitat-plans-pipeline-machine
        path: /entrypoint.sh
    task: test-varnish
  public: false
  serial: true
  serial_groups:
  - delmo
- name: test-wordpress
  plan:
  - aggregate:
    - get: starkandwayne-wordpress-edge-image
      params:
        skip_download: true
      passed:
      - build-wordpress
      trigger: true
    - get: wordpress-tests
      trigger: true
    - get: starkandwayne-wordpress-artifact
      passed:
      - build-wordpress
    - get: starkandwayne-wordpress-image
      params:
        skip_download: true
      passed:
      - build-wordpress
  - config:
      image_resource:
        source:
          repository: bodymindarts/delmo-concourse
        type: docker-image
      inputs:
      - name: wordpress-tests
      params:
        AWS_ACCESS_KEY: REDACTED
        AWS_BUCKET: shield-habitat-test
        AWS_REGION: eu-central-1
        AWS_SECRET_KEY: REDACTED
        MACHINE_EXPORT_AWS_ACCESS_KEY_ID: REDACTED
        MACHINE_EXPORT_AWS_BUCKET: docker-machine-exports
        MACHINE_EXPORT_AWS_REGION: eu-central-1
        MACHINE_EXPORT_AWS_SECRET_ACCESS_KEY: REDACTED
        MACHINE_NAME: habitat-plans-pipeline-machine
      platform: linux
      run:
        args:
        - delmo
        - --only-build-task
        - -f
        - wordpress-tests/wordpress/tests/delmo.yml
        - -m
        - habitat-plans-pipeline-machine
        path: /entrypoint.sh
    task: test-wordpress
  public: false
  serial: true
  serial_groups:
  - delmo
resource_types:
- name: hab-pkg
  source:
    repository: starkandwayne/habitat-resource
  type: docker-image
resources:
- name: habitat-plans-pipeline
  source:
    paths:
    - ci/image/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: habitat-plans-ci
  source:
    paths:
    - ci/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: habitat-release
  source:
    access_token: REDACTED
    repository: habitat
    user: habitat-sh
  type: github-release
- name: habitat-plans-pipeline-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/habitat-plans-pipeline
    username: REDACTED
  type: docker-image
- name: core-openssl-pkg
  source:
    name: openssl
    origin: core
  type: hab-pkg
- name: core-pcre-pkg
  source:
    name: pcre
    origin: core
  type: hab-pkg
- name: core-zlib-pkg
  source:
    name: zlib
    origin: core
  type: hab-pkg
- name: core-glibc-pkg
  source:
    name: glibc
    origin: core
  type: hab-pkg
- name: core-bash-pkg
  source:
    name: bash
    origin: core
  type: hab-pkg
- name: core-coreutils-pkg
  source:
    name: coreutils
    origin: core
  type: hab-pkg
- name: core-gawk-pkg
  source:
    name: gawk
    origin: core
  type: hab-pkg
- name: core-gcc-libs-pkg
  source:
    name: gcc-libs
    origin: core
  type: hab-pkg
- name: core-grep-pkg
  source:
    name: grep
    origin: core
  type: hab-pkg
- name: core-inetutils-pkg
  source:
    name: inetutils
    origin: core
  type: hab-pkg
- name: core-ncurses-pkg
  source:
    name: ncurses
    origin: core
  type: hab-pkg
- name: core-perl-pkg
  source:
    name: perl
    origin: core
  type: hab-pkg
- name: core-procps-ng-pkg
  source:
    name: procps-ng
    origin: core
  type: hab-pkg
- name: core-sed-pkg
  source:
    name: sed
    origin: core
  type: hab-pkg
- name: core-envdir-pkg
  source:
    name: envdir
    origin: core
  type: hab-pkg
- name: core-postgresql-9.6.1-pkg
  source:
    name: postgresql
    origin: core
    version: 9.6.1
  type: hab-pkg
- name: starkandwayne-wal-e-pkg
  source:
    auth_token: REDACTED
    name: wal-e
    origin: starkandwayne
  type: hab-pkg
- name: core-erlang-pkg
  source:
    name: erlang
    origin: core
  type: hab-pkg
- name: core-jq-static-pkg
  source:
    name: jq-static
    origin: core
  type: hab-pkg
- name: starkandwayne-shield-agent-pkg
  source:
    auth_token: REDACTED
    name: shield-agent
    origin: starkandwayne
  type: hab-pkg
- name: core-bzip2-pkg
  source:
    name: bzip2
    origin: core
  type: hab-pkg
- name: core-cacerts-pkg
  source:
    name: cacerts
    origin: core
  type: hab-pkg
- name: core-curl-pkg
  source:
    name: curl
    origin: core
  type: hab-pkg
- name: core-libarchive-pkg
  source:
    name: libarchive
    origin: core
  type: hab-pkg
- name: core-nginx-pkg
  source:
    name: nginx
    origin: core
  type: hab-pkg
- name: starkandwayne-postgresql-pkg
  source:
    auth_token: REDACTED
    name: postgresql
    origin: starkandwayne
  type: hab-pkg
- name: starkandwayne-shield-proxy-0.10.8-pkg
  source:
    name: shield-proxy
    origin: starkandwayne
    version: 0.10.8
  type: hab-pkg
- name: core-docutils-pkg
  source:
    name: docutils
    origin: core
  type: hab-pkg
- name: core-gcc-pkg
  source:
    name: gcc
    origin: core
  type: hab-pkg
- name: core-gettext-pkg
  source:
    name: gettext
    origin: core
  type: hab-pkg
- name: core-groff-pkg
  source:
    name: groff
    origin: core
  type: hab-pkg
- name: core-libbsd-pkg
  source:
    name: libbsd
    origin: core
  type: hab-pkg
- name: core-libedit-pkg
  source:
    name: libedit
    origin: core
  type: hab-pkg
- name: core-libpipeline-pkg
  source:
    name: libpipeline
    origin: core
  type: hab-pkg
- name: core-libunistring-pkg
  source:
    name: libunistring
    origin: core
  type: hab-pkg
- name: core-man-db-pkg
  source:
    name: man-db
    origin: core
  type: hab-pkg
- name: core-lzop-pkg
  source:
    name: lzop
    origin: core
  type: hab-pkg
- name: core-postgresql-pkg
  source:
    name: postgresql
    origin: core
  type: hab-pkg
- name: core-pv-pkg
  source:
    name: pv
    origin: core
  type: hab-pkg
- name: core-python-3.5.2-pkg
  source:
    name: python
    origin: core
    version: 3.5.2
  type: hab-pkg
- name: core-mysql-client-pkg
  source:
    name: mysql-client
    origin: core
  type: hab-pkg
- name: core-php-pkg
  source:
    name: php
    origin: core
  type: hab-pkg
- name: starkandwayne-wordpress-proxy-4.7.4-pkg
  source:
    name: wordpress-proxy
    origin: starkandwayne
    version: 4.7.4
  type: hab-pkg
- name: starkandwayne-consul-pkg
  source:
    auth_token: REDACTED
    name: consul
    origin: starkandwayne
  type: hab-pkg
- name: consul-plan
  source:
    ignore_paths:
    - consul/tests/*
    - consul/README.md
    paths:
    - consul/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: starkandwayne-consul-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/consul
    username: REDACTED
  type: docker-image
- name: starkandwayne-consul-edge-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/consul
    tag: edge
    username: REDACTED
  type: docker-image
- name: starkandwayne-consul-artifact
  source:
    access_key_id: REDACTED
    bucket: snw-habitat-packages
    regexp: starkandwayne-consul/starkandwayne-consul-(.*)-x86_64-linux.hart
    region_name: eu-central-1
    secret_access_key: REDACTED
  type: s3
- name: starkandwayne-haproxy-pkg
  source:
    auth_token: REDACTED
    name: haproxy
    origin: starkandwayne
  type: hab-pkg
- name: haproxy-plan
  source:
    ignore_paths:
    - haproxy/tests/*
    - haproxy/README.md
    paths:
    - haproxy/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: starkandwayne-haproxy-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/haproxy
    username: REDACTED
  type: docker-image
- name: starkandwayne-haproxy-edge-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/haproxy
    tag: edge
    username: REDACTED
  type: docker-image
- name: starkandwayne-haproxy-artifact
  source:
    access_key_id: REDACTED
    bucket: snw-habitat-packages
    regexp: starkandwayne-haproxy/starkandwayne-haproxy-(.*)-x86_64-linux.hart
    region_name: eu-central-1
    secret_access_key: REDACTED
  type: s3
- name: starkandwayne-hashi-ui-pkg
  source:
    auth_token: REDACTED
    name: hashi-ui
    origin: starkandwayne
  type: hab-pkg
- name: hashi-ui-plan
  source:
    ignore_paths:
    - hashi-ui/tests/*
    - hashi-ui/README.md
    paths:
    - hashi-ui/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: starkandwayne-hashi-ui-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/hashi-ui
    username: REDACTED
  type: docker-image
- name: starkandwayne-hashi-ui-edge-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/hashi-ui
    tag: edge
    username: REDACTED
  type: docker-image
- name: starkandwayne-hashi-ui-artifact
  source:
    access_key_id: REDACTED
    bucket: snw-habitat-packages
    regexp: starkandwayne-hashi-ui/starkandwayne-hashi-ui-(.*)-x86_64-linux.hart
    region_name: eu-central-1
    secret_access_key: REDACTED
  type: s3
- name: starkandwayne-mysql-pkg
  source:
    auth_token: REDACTED
    name: mysql
    origin: starkandwayne
  type: hab-pkg
- name: mysql-plan
  source:
    ignore_paths:
    - mysql/tests/*
    - mysql/README.md
    paths:
    - mysql/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: starkandwayne-mysql-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/mysql
    username: REDACTED
  type: docker-image
- name: starkandwayne-mysql-edge-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/mysql
    tag: edge
    username: REDACTED
  type: docker-image
- name: starkandwayne-mysql-artifact
  source:
    access_key_id: REDACTED
    bucket: snw-habitat-packages
    regexp: starkandwayne-mysql/starkandwayne-mysql-(.*)-x86_64-linux.hart
    region_name: eu-central-1
    secret_access_key: REDACTED
  type: s3
- name: postgresql-plan
  source:
    ignore_paths:
    - postgresql/tests/*
    - postgresql/README.md
    paths:
    - postgresql/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: starkandwayne-postgresql-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/postgresql
    username: REDACTED
  type: docker-image
- name: starkandwayne-postgresql-edge-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/postgresql
    tag: edge
    username: REDACTED
  type: docker-image
- name: starkandwayne-postgresql-artifact
  source:
    access_key_id: REDACTED
    bucket: snw-habitat-packages
    regexp: starkandwayne-postgresql/starkandwayne-postgresql-(.*)-x86_64-linux.hart
    region_name: eu-central-1
    secret_access_key: REDACTED
  type: s3
- name: starkandwayne-rabbitmq-pkg
  source:
    auth_token: REDACTED
    name: rabbitmq
    origin: starkandwayne
  type: hab-pkg
- name: rabbitmq-plan
  source:
    ignore_paths:
    - rabbitmq/tests/*
    - rabbitmq/README.md
    paths:
    - rabbitmq/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: starkandwayne-rabbitmq-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/rabbitmq
    username: REDACTED
  type: docker-image
- name: starkandwayne-rabbitmq-edge-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/rabbitmq
    tag: edge
    username: REDACTED
  type: docker-image
- name: starkandwayne-rabbitmq-artifact
  source:
    access_key_id: REDACTED
    bucket: snw-habitat-packages
    regexp: starkandwayne-rabbitmq/starkandwayne-rabbitmq-(.*)-x86_64-linux.hart
    region_name: eu-central-1
    secret_access_key: REDACTED
  type: s3
- name: starkandwayne-redis-pkg
  source:
    auth_token: REDACTED
    name: redis
    origin: starkandwayne
  type: hab-pkg
- name: redis-plan
  source:
    ignore_paths:
    - redis/tests/*
    - redis/README.md
    paths:
    - redis/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: starkandwayne-redis-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/redis
    username: REDACTED
  type: docker-image
- name: starkandwayne-redis-edge-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/redis
    tag: edge
    username: REDACTED
  type: docker-image
- name: starkandwayne-redis-artifact
  source:
    access_key_id: REDACTED
    bucket: snw-habitat-packages
    regexp: starkandwayne-redis/starkandwayne-redis-(.*)-x86_64-linux.hart
    region_name: eu-central-1
    secret_access_key: REDACTED
  type: s3
- name: shield-agent-plan
  source:
    ignore_paths:
    - shield-agent/tests/*
    - shield-agent/README.md
    paths:
    - shield-agent/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: starkandwayne-shield-agent-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/shield-agent
    username: REDACTED
  type: docker-image
- name: starkandwayne-shield-agent-edge-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/shield-agent
    tag: edge
    username: REDACTED
  type: docker-image
- name: starkandwayne-shield-agent-artifact
  source:
    access_key_id: REDACTED
    bucket: snw-habitat-packages
    regexp: starkandwayne-shield-agent/starkandwayne-shield-agent-(.*)-x86_64-linux.hart
    region_name: eu-central-1
    secret_access_key: REDACTED
  type: s3
- name: starkandwayne-shield-proxy-pkg
  source:
    auth_token: REDACTED
    name: shield-proxy
    origin: starkandwayne
  type: hab-pkg
- name: shield-proxy-plan
  source:
    ignore_paths:
    - shield-proxy/tests/*
    - shield-proxy/README.md
    paths:
    - shield-proxy/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: starkandwayne-shield-proxy-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/shield-proxy
    username: REDACTED
  type: docker-image
- name: starkandwayne-shield-proxy-edge-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/shield-proxy
    tag: edge
    username: REDACTED
  type: docker-image
- name: starkandwayne-shield-proxy-artifact
  source:
    access_key_id: REDACTED
    bucket: snw-habitat-packages
    regexp: starkandwayne-shield-proxy/starkandwayne-shield-proxy-(.*)-x86_64-linux.hart
    region_name: eu-central-1
    secret_access_key: REDACTED
  type: s3
- name: starkandwayne-shield-pkg
  source:
    auth_token: REDACTED
    name: shield
    origin: starkandwayne
  type: hab-pkg
- name: shield-plan
  source:
    ignore_paths:
    - shield/tests/*
    - shield/README.md
    paths:
    - shield/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: starkandwayne-shield-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/shield
    username: REDACTED
  type: docker-image
- name: starkandwayne-shield-edge-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/shield
    tag: edge
    username: REDACTED
  type: docker-image
- name: starkandwayne-shield-artifact
  source:
    access_key_id: REDACTED
    bucket: snw-habitat-packages
    regexp: starkandwayne-shield/starkandwayne-shield-(.*)-x86_64-linux.hart
    region_name: eu-central-1
    secret_access_key: REDACTED
  type: s3
- name: starkandwayne-varnish-pkg
  source:
    auth_token: REDACTED
    name: varnish
    origin: starkandwayne
  type: hab-pkg
- name: varnish-plan
  source:
    ignore_paths:
    - varnish/tests/*
    - varnish/README.md
    paths:
    - varnish/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: starkandwayne-varnish-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/varnish
    username: REDACTED
  type: docker-image
- name: starkandwayne-varnish-edge-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/varnish
    tag: edge
    username: REDACTED
  type: docker-image
- name: starkandwayne-varnish-artifact
  source:
    access_key_id: REDACTED
    bucket: snw-habitat-packages
    regexp: starkandwayne-varnish/starkandwayne-varnish-(.*)-x86_64-linux.hart
    region_name: eu-central-1
    secret_access_key: REDACTED
  type: s3
- name: wal-e-plan
  source:
    ignore_paths:
    - wal-e/tests/*
    - wal-e/README.md
    paths:
    - wal-e/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: starkandwayne-wal-e-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/wal-e
    username: REDACTED
  type: docker-image
- name: starkandwayne-wal-e-edge-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/wal-e
    tag: edge
    username: REDACTED
  type: docker-image
- name: starkandwayne-wal-e-artifact
  source:
    access_key_id: REDACTED
    bucket: snw-habitat-packages
    regexp: starkandwayne-wal-e/starkandwayne-wal-e-(.*)-x86_64-linux.hart
    region_name: eu-central-1
    secret_access_key: REDACTED
  type: s3
- name: starkandwayne-wordpress-proxy-pkg
  source:
    auth_token: REDACTED
    name: wordpress-proxy
    origin: starkandwayne
  type: hab-pkg
- name: wordpress-proxy-plan
  source:
    ignore_paths:
    - wordpress-proxy/tests/*
    - wordpress-proxy/README.md
    paths:
    - wordpress-proxy/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: starkandwayne-wordpress-proxy-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/wordpress-proxy
    username: REDACTED
  type: docker-image
- name: starkandwayne-wordpress-proxy-edge-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/wordpress-proxy
    tag: edge
    username: REDACTED
  type: docker-image
- name: starkandwayne-wordpress-proxy-artifact
  source:
    access_key_id: REDACTED
    bucket: snw-habitat-packages
    regexp: starkandwayne-wordpress-proxy/starkandwayne-wordpress-proxy-(.*)-x86_64-linux.hart
    region_name: eu-central-1
    secret_access_key: REDACTED
  type: s3
- name: starkandwayne-wordpress-pkg
  source:
    auth_token: REDACTED
    name: wordpress
    origin: starkandwayne
  type: hab-pkg
- name: wordpress-plan
  source:
    ignore_paths:
    - wordpress/tests/*
    - wordpress/README.md
    paths:
    - wordpress/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: starkandwayne-wordpress-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/wordpress
    username: REDACTED
  type: docker-image
- name: starkandwayne-wordpress-edge-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/wordpress
    tag: edge
    username: REDACTED
  type: docker-image
- name: starkandwayne-wordpress-artifact
  source:
    access_key_id: REDACTED
    bucket: snw-habitat-packages
    regexp: starkandwayne-wordpress/starkandwayne-wordpress-(.*)-x86_64-linux.hart
    region_name: eu-central-1
    secret_access_key: REDACTED
  type: s3
- name: consul-tests
  source:
    paths:
    - consul/tests/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: postgresql-tests
  source:
    paths:
    - postgresql/tests/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: rabbitmq-tests
  source:
    paths:
    - rabbitmq/tests/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: redis-tests
  source:
    paths:
    - redis/tests/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: shield-tests
  source:
    paths:
    - shield/tests/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: varnish-tests
  source:
    paths:
    - varnish/tests/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: wordpress-tests
  source:
    paths:
    - wordpress/tests/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git

