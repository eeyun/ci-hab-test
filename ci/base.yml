---
meta:
  delmo:
    machine_name: habitat-plans-pipeline-machine
  dockerhub:
    email: (( vault "secret/pipelines/habitat-plans/dockerhub:email" ))
    username: (( vault "secret/pipelines/habitat-plans/dockerhub:username" ))
    password: (( vault "secret/pipelines/habitat-plans/dockerhub:password" ))
  habitat:
    origin_key: (( vault "secret/pipelines/habitat-plans/habitat:origin_key" ))
    auth_token: (( vault "secret/pipelines/habitat-plans/habitat:auth_token" ))
    origin: starkandwayne
  aws:
    habitat-artifacts-bucket: snw-habitat-packages
    docker-machine-bucket: docker-machine-exports
    shield-test-bucket: shield-habitat-test
    access_key_id: (( vault "secret/pipelines/habitat-plans/aws:access_key_id" ))
    secret_access_key: (( vault "secret/pipelines/habitat-plans/aws:secret_access_key" ))
    region: eu-central-1
  digitalocean:
    access_token: (( vault "secret/pipelines/habitat-plans/digitalocean:access_token" ))
    region: fra1

groups:
- name: all-packages
  jobs: []
- name: images
  jobs: [build-habitat-plans-pipeline-image]
- name: docker-machine-setup
  jobs: [docker-machine-setup]

jobs:
- name: build-habitat-plans-pipeline-image
  public: true
  plan:
  - aggregate:
    - {get: habitat-plans-pipeline, trigger: true}
    - {get: habitat-release, trigger: true}
  - put: habitat-plans-pipeline-image
    params:
      build: habitat-plans-pipeline/ci/image
      tag: habitat-release/version
      tag_as_latest: true

- name: docker-machine-setup
  serial: true
  plan:
  - task: docker-machine-setup
    config:
      platform: linux
      image: docker:///bodymindarts/docker-machine-setup
      params:
        MACHINE_NAME: (( grab meta.delmo.machine_name ))
        DIGITALOCEAN_ACCESS_TOKEN: (( grab meta.digitalocean.access_token ))
        DIGITALOCEAN_REGION: (( grab meta.digitalocean.region ))
        AWS_DEFAULT_REGION: (( grab meta.aws.region ))
        AWS_ACCESS_KEY_ID: (( grab meta.aws.access_key_id ))
        AWS_SECRET_ACCESS_KEY: (( grab meta.aws.secret_access_key ))
        AWS_BUCKET: (( grab meta.aws.docker-machine-bucket ))

      run:
        path: /setup-digitalocean

resources:
- name: habitat-plans-pipeline
  type: git
  source:
    uri: https://github.com/starkandwayne/habitat-plans.git
    paths: [ci/image/*]

- name: habitat-plans-ci
  type: git
  source:
    uri: https://github.com/starkandwayne/habitat-plans.git
    paths: [ci/*]

- name: habitat-release
  type: github-release
  source:
    user:         habitat-sh
    repository:   habitat

- name: habitat-plans-pipeline-image
  type: docker-image
  source:
    email: (( grab meta.dockerhub.email ))
    username: (( grab meta.dockerhub.username ))
    password: (( grab meta.dockerhub.password ))
    repository: starkandwayne/habitat-plans-pipeline

resource_types:
- name: hab-pkg
  type: docker-image
  source:
    repository: starkandwayne/habitat-resource
