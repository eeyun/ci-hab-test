---
groups:
- name: consul
  jobs:
  - (( append ))
  - validate-consul
  - test-consul
  - release-consul
- name: all-packages
  jobs:
  - (( append ))
  - test-consul
  - release-consul

jobs:
- name: validate-consul
  public: true
  plan:
  - (( inline ))
  - aggregate:
    - (( append ))
    - get: eeyun-consul-bldr-group
      trigger: true
    - {get: habitat-plans-ci}
  - task: validate-consul-group
    privileged: true
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: { repository: eeyun/habitat-plans-pipeline }
      inputs:
      - name: eeyun-consul-bldr-group
      - name: habitat-plans-ci
      outputs:
      - name: result
      run:
        path: ./habitat-plans-ci/ci/scripts/validate-group
      params:
        GROUP_CONTEXT: eeyun-consul-bldr-group
        HAB_ORIGIN: eeyun
        PLAN_NAME: consul
        HAB_ORIGIN_KEY: (( grab meta.habitat.origin_key ))
- name: test-consul
  public: false
  serial: true
  serial_groups: [delmo]
  plan:
  - aggregate:
    - get: eeyun-consul-bldr-group
      trigger: true
      passed: [validate-consul]
    - {get: consul-tests}
  - task: test-consul
    privileged: true
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: { repository: eeyun/hab-delmo }
      params:
        GROUP_CONTEXT: eeyun-consul-bldr-group
        PKG_CONTEXT: consul
        MACHINE_EXPORT_AWS_ACCESS_KEY_ID: (( grab meta.aws.access_key_id ))
        MACHINE_EXPORT_AWS_SECRET_ACCESS_KEY: (( grab meta.aws.secret_access_key ))
        MACHINE_EXPORT_AWS_REGION: (( grab meta.aws.region ))
        MACHINE_EXPORT_AWS_BUCKET: (( grab meta.aws.docker-machine-bucket ))
        MACHINE_NAME: (( grab meta.delmo.machine_name ))
        AWS_ACCESS_KEY: (( grab meta.aws.access_key_id ))
        AWS_SECRET_KEY: (( grab meta.aws.secret_access_key ))
        AWS_REGION: (( grab meta.aws.region ))
      inputs:
      - name: consul-tests
      - name: eeyun-consul-bldr-group
      outputs:
      - name: notify_message
      run:
        path: /entrypoint.sh
    ensure:
      put: notify
      params:
        username: Hab-CI
        icon_url: https://brand.chef.io/images/habitat/logos/logo-3.png
        text_file: notify_message/message
- name: release-consul
  public: true
  plan:
  - (( inline ))
  - aggregate:
    - (( inline ))
    - get: eeyun-consul-bldr-group
      passed: [test-consul]
      trigger: true
    - {get: habitat-plans-ci}
  - task: release-consul
    privileged: true
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: { repository: eeyun/habitat-plans-pipeline }
      params:
        GROUP_CONTEXT: eeyun-consul-bldr-group
        PKG_CONTEXT: eeyun/consul
      inputs:
      - name: eeyun-consul-bldr-group
      - name: habitat-plans-ci
      outputs:
      - name: notify_message
      run:
        path: ./habitat-plans-ci/ci/scripts/release_notify
  - aggregate:
    - put: eeyun-consul-bldr-group
      params:
        result: eeyun-consul-bldr-group
      on_success:
        put: notify
        params:
          username: Hab-CI
          icon_url: https://brand.chef.io/images/habitat/logos/logo-3.png
          text_file: notify_message/success_message
      on_failure:
        put: notify
        params:
          username: Hab-CI
          icon_url: https://brand.chef.io/images/habitat/logos/logo-3.png
          text_file: notify_message/failure_message

resources:
- name: eeyun-consul-bldr-group
  type: bldr-job
  source:
    origin: (( grab meta.habitat.origin ))
    name: consul
    auth_token: (( grab meta.habitat.auth_token ))
- name: consul-tests
  type: git
  source:
    uri: https://github.com/eeyun/ci-hab-test.git
    paths: [consul/tests/*]
